package com.vandersoncamp.transporte.service.linhatransporte;import com.vandersoncamp.transporte.model.LinhaLotacao;import com.vandersoncamp.transporte.repository.LinhaLotacaoRepository;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.List;import java.util.Optional;@Servicepublic class LinhaLotacaoService {    @Autowired    private LinhaLotacaoRepository repository;    public LinhaLotacaoService(LinhaLotacaoRepository repository) {        this.repository = repository;    }    public Iterable<LinhaLotacao> findAll() {        return repository.findAll();    }    public LinhaLotacao save(LinhaLotacao linhaLotacao) {        return repository.save(linhaLotacao);    }    public Optional<LinhaLotacao> findById(Long id) {        return repository.findById(id);    }    public void integrarLinhaLotacao(List<LinhaLotacao> linhas) {        linhas.forEach(this::geraLinhaLotacao);    }    public LinhaLotacao geraLinhaLotacao(LinhaLotacao linhaLotacao) {        Optional<LinhaLotacao> optional = findById(linhaLotacao.getId());        LinhaLotacao linha;        if (optional.isPresent()) {            linha = optional.get();        } else {            linha = save(linhaLotacao);        }        if (optional.isPresent() && (!optional.get().equals(linhaLotacao))) {            LinhaLotacao novalinha = new LinhaLotacao();            novalinha.setId(linhaLotacao.getId());            novalinha.setCodigo(linhaLotacao.getCodigo());            novalinha.setNome(linhaLotacao.getNome());            linha = save(novalinha);        }        return linha;    }}