package com.vandersoncamp.transporte.resources;import com.vandersoncamp.transporte.model.Cliente;import com.vandersoncamp.transporte.service.cliente.ClienteService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpStatus;import org.springframework.http.MediaType;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;@RestController@RequestMapping("clientes")public class ClienteResource {    @Autowired    private ClienteService service;    @GetMapping(produces = {MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_XML_VALUE})    public Iterable<Cliente> findAll() {        return service.findAll();    }    @GetMapping("/{id}")    public Cliente findById(@PathVariable("id") Long id) {        return service.findById(id);    }    @PostMapping    @ResponseStatus(HttpStatus.CREATED)    public Cliente insert(@RequestBody Cliente cliente) {        return service.save(cliente);    }    @PutMapping("{id}")    public ResponseEntity<Cliente> update(@PathVariable("id") Long id, @RequestBody Cliente cliente) {        if (!id.equals(cliente.getId())) {            return ResponseEntity.badRequest().build();        }        return ResponseEntity.ok(service.save(cliente));    }    @DeleteMapping("{id}")    @ResponseStatus(HttpStatus.NO_CONTENT)    public void delete(@PathVariable("id") Long id) {        service.remove(id);    }    @GetMapping("/filter")    public Iterable<Cliente> findByNome(@RequestParam("nome") String nome) {        return service.findByNome(nome);    }}