package com.vandersoncamp.transporte.resources;import com.vandersoncamp.transporte.dto.LinhaDTO;import com.vandersoncamp.transporte.model.LinhaLotacao;import com.vandersoncamp.transporte.service.linhatransporte.LinhaDTOService;import com.vandersoncamp.transporte.service.linhatransporte.LinhaLotacaoService;import com.vandersoncamp.transporte.utils.RestTemplateConverter;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.core.ParameterizedTypeReference;import org.springframework.http.HttpMethod;import org.springframework.http.MediaType;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import java.util.List;import java.util.stream.Collectors;@RestController@RequestMapping("linha-lotacao")public class LinhaLotacaoResource {    @Autowired    private LinhaLotacaoService service;    @Autowired    private LinhaDTOService linhaDTOService;    @Autowired    private RestTemplateConverter restTemplateConverter;    @GetMapping(value = "/consultar", produces = {MediaType.APPLICATION_JSON_VALUE})    public Iterable<LinhaLotacao> findAll() {        return service.findAll();    }    @PostMapping("/integrar")    public void integrarLinhas() {        List<LinhaLotacao> linhas = findByPoaTransporte();        service.integrarLinhaLotacao(linhas);    }    private List<LinhaLotacao> findByPoaTransporte() {        String url = "http://www.poatransporte.com.br/php/facades/process.php?a=nc&p=%&t=l";        ResponseEntity<List<LinhaDTO>> response = restTemplateConverter.messageConverter().exchange(                url, HttpMethod.GET, null, new ParameterizedTypeReference<List<LinhaDTO>>() {                });        return response.getBody().stream().map(dto ->                linhaDTOService.toEntityLotacao(dto)).collect(Collectors.toList());    }}