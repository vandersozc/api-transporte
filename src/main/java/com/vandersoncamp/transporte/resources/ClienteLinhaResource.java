package com.vandersoncamp.transporte.resources;import com.vandersoncamp.transporte.model.ClienteLinha;import com.vandersoncamp.transporte.service.clientelinha.ClienteLinhaService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpStatus;import org.springframework.http.MediaType;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;@RestController@RequestMapping("cliente-linha")public class ClienteLinhaResource {    @Autowired    private ClienteLinhaService service;    @GetMapping(produces = {MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_XML_VALUE})    public Iterable<ClienteLinha> findAll() {        return service.findAll();    }    @PostMapping    @ResponseStatus(HttpStatus.CREATED)    public ClienteLinha insert(@RequestBody ClienteLinha endereco) {        return service.save(endereco);    }    @GetMapping("{id}")    public ClienteLinha findById(@PathVariable("id") Long id) {        return service.findById(id);    }    @PutMapping("{id}")    public ResponseEntity<ClienteLinha> update(@PathVariable("id") Long id, @RequestBody ClienteLinha endereco) {        if (!id.equals(endereco.getId())) {            return ResponseEntity.badRequest().build();        }        return ResponseEntity.ok(service.save(endereco));    }    @DeleteMapping("{id}")    @ResponseStatus(HttpStatus.NO_CONTENT)    public void delete(@PathVariable("id") Long id) {        service.remove(id);    }    @GetMapping("cliente/{id}")    public Iterable<ClienteLinha> findLinhasByCliente(@PathVariable("id") Long id) {        return service.findLinhasByCliente(id);    }}