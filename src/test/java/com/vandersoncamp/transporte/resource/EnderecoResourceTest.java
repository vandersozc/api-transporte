package com.vandersoncamp.transporte.resource;import com.vandersoncamp.transporte.TransporteApplicationTests;import com.vandersoncamp.transporte.enuns.EstadoEnum;import com.vandersoncamp.transporte.model.Endereco;import org.junit.Before;import org.junit.Test;import org.springframework.boot.web.server.LocalServerPort;import org.springframework.http.HttpStatus;import static io.restassured.RestAssured.given;import static io.restassured.http.ContentType.JSON;import static org.hamcrest.Matchers.*;public class EnderecoResourceTest extends TransporteApplicationTests {    private Endereco endereco;    @LocalServerPort    private int port;    private Endereco getEndereco() {        Endereco endereco = new Endereco();        endereco.setCep("88808520");        endereco.setLogradouro("Avenida Universitária");        endereco.setBairro("Bairro centro");        endereco.setLocalidade("Criciúma");        endereco.setUf(EstadoEnum.SC);        endereco.setNumero(100L);        endereco.setIbge(4204608L);        endereco.setComplemento("Complemento do endereço");        return endereco;    }    @Before    public void setUp() {        endereco = getEndereco();    }    @Test    public void enderecoInsert() {        given().port(port).request().contentType(JSON)                .body(endereco)                .when()                .post("/enderecos")                .then()                .statusCode(HttpStatus.CREATED.value())                .body("id", equalTo(3),                        "numero", equalTo(100),                        "bairro", equalTo("Bairro centro"),                        "localidade", equalTo("Criciúma"),                        "uf", equalTo(EstadoEnum.SC.name()),                        "complemento", equalTo("Complemento do endereço"),                        "logradouro", equalTo("Avenida Universitária"));    }    @Test    public void enderecoFindById() {        given().port(port).contentType(JSON)                .pathParam("id", "1")                .get("/enderecos/{id}")                .then()                .statusCode(HttpStatus.OK.value())                .body("id", equalTo(1),                        "numero", equalTo(10),                        "uf", equalTo(EstadoEnum.SC.name()),                        "logradouro", equalTo("Avenida Centenário"),                        "cep", equalTo("88802971"),                        "bairro", equalTo("Centro"),                        "localidade", equalTo("Criciúma"));    }    @Test    public void enderecoFindByLogradouro() {        given().port(port).contentType(JSON)                .queryParam("logradouro", "Avenida Centenário")                .get("/enderecos/busca")                .then()                .statusCode(HttpStatus.OK.value())                .body("results", not(empty()));    }    @Test    public void enderecoFindByLogradouroEmpty() {        given().port(port).contentType(JSON)                .queryParam("logradouro", "Sem dados")                .get("/enderecos/busca")                .then()                .statusCode(HttpStatus.OK.value())                .body("results", empty());    }    @Test    public void enderecoFindAll() {        given().port(port).contentType(JSON)                .get("/enderecos")                .then()                .statusCode(HttpStatus.OK.value())                .body("empty", equalTo(false));    }    @Test    public void enderecoUpdateOk() {        endereco.setId(1L);        endereco.setCep("88890130");        endereco.setLogradouro("Rua Joaquim Nabuco");        endereco.setBairro("Bairro Michel");        endereco.setLocalidade("Criciúma");        endereco.setUf(EstadoEnum.SC);        endereco.setNumero(200L);        given().port(port).contentType(JSON)                .pathParam("id", "1")                .body(endereco)                .put("enderecos/{id}")                .then()                .statusCode(HttpStatus.OK.value())                .body("id", equalTo(1),                        "cep", equalTo("88890130"),                        "numero", equalTo(200),                        "logradouro", equalTo("Rua Joaquim Nabuco"),                        "bairro", equalTo("Bairro Michel"),                        "localidade", equalTo("Criciúma"),                        "uf", equalTo(EstadoEnum.SC.name()));    }    @Test    public void enderecoUpdateBadRequest() {        endereco.setId(1L);        given().port(port).contentType(JSON)                .pathParam("id", "3")                .body(endereco)                .put("enderecos/{id}")                .then()                .statusCode(HttpStatus.BAD_REQUEST.value());    }    @Test    public void enderecoRemove() {        given().port(port).contentType(JSON)                .pathParam("id", "2")                .when()                .delete("/enderecos/{id}")                .then()                .statusCode(HttpStatus.NO_CONTENT.value());    }    @Test    public void enderecoFindByCepLocal() {        given().port(port).contentType(JSON)                .pathParam("cep", "88802500")                .when()                .get("/enderecos/cep/{cep}")                .then()                .statusCode(HttpStatus.OK.value())                .body("cep", equalTo("88802500"),                        "logradouro", equalTo("Rua Antônio Gabriel Machado"),                        "bairro", equalTo("São Cristóvão"),                        "localidade", equalTo("Criciúma"),                        "numero", equalTo(89),                        "uf", equalTo(EstadoEnum.SC.name()));    }    @Test    public void enderecoFindByViaCep() {        given().port(port).contentType(JSON)                .pathParam("cep", "88808520")                .when()                .get("/enderecos/cep/{cep}")                .then()                .statusCode(HttpStatus.OK.value())                .body("cep", equalTo("88808-520"),                        "logradouro", equalTo("Rua José Alves Vieira"),                        "bairro", equalTo("Mãe Luzia"),                        "localidade", equalTo("Criciúma"),                        "ibge", equalTo(4204608),                        "uf", equalTo(EstadoEnum.SC.name()));    }    @Test    public void enderecoBuscarViaCepInvalido() {        given().port(port).contentType(JSON)                .pathParam("cep", "88877520")                .when()                .get("/enderecos/cep/{cep}")                .then()                .statusCode(HttpStatus.OK.value())                .body("cep", equalTo(null));    }}