package com.vandersoncamp.transporte.repository;import com.vandersoncamp.transporte.model.ClienteLinha;import org.junit.Test;import org.junit.runner.RunWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;import org.springframework.test.context.TestPropertySource;import org.springframework.test.context.jdbc.Sql;import org.springframework.test.context.junit4.SpringRunner;import static org.assertj.core.api.Assertions.assertThat;@Sql(value = "/load-database.sql", executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)@Sql(value = "/clean-database.sql", executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD)@RunWith(SpringRunner.class)@DataJpaTest@TestPropertySource("classpath:application-test.properties")public class ClienteLinhaRepositoryTest {    @Autowired    private ClienteLinhaRepository clienteLinhaRepository;    @Test    public void linhaFindByClienteTrue() {        Iterable<ClienteLinha> iterable = clienteLinhaRepository.findLinhasByCliente(1L);        iterable.forEach(linha -> {                    assertThat(linha.getId()).isNotNull();                }        );    }    @Test    public void linhaFindByClienteFalse() {        Iterable<ClienteLinha> iterable = clienteLinhaRepository.findLinhasByCliente(4L);        iterable.forEach(linha ->                assertThat(linha.getCliente().getId()).isNull()        );    }    @Test    public void linhaExistsByClienteOnibusTrue() {        assertThat(clienteLinhaRepository.existsByClienteOnibus(1L, 1L)).isTrue();    }    @Test    public void linhaExistsByClienteOnibusFalse() {        assertThat(clienteLinhaRepository.existsByClienteOnibus(1L, 4L)).isFalse();    }    @Test    public void linhaExistsByClienteLotacaoTrue() {        assertThat(clienteLinhaRepository.existsByClienteLotacao(1L, 1L)).isTrue();    }    @Test    public void linhaExistsByClienteLotacaoFalse() {        assertThat(clienteLinhaRepository.existsByClienteLotacao(1L, 4L)).isFalse();    }}