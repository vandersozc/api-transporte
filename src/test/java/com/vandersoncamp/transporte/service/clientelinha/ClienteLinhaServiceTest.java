package com.vandersoncamp.transporte.service.clientelinha;import com.vandersoncamp.transporte.dto.ClienteLinhaDTO;import com.vandersoncamp.transporte.enuns.TipoTransporteEnum;import com.vandersoncamp.transporte.model.Cliente;import com.vandersoncamp.transporte.model.ClienteLinha;import com.vandersoncamp.transporte.model.LinhaLotacao;import com.vandersoncamp.transporte.model.LinhaOnibus;import com.vandersoncamp.transporte.repository.ClienteLinhaRepository;import org.junit.Before;import org.junit.Test;import org.junit.runner.RunWith;import org.springframework.boot.test.mock.mockito.MockBean;import org.springframework.test.context.junit4.SpringRunner;import java.util.ArrayList;import java.util.List;import static org.mockito.Mockito.*;@RunWith(SpringRunner.class)public class ClienteLinhaServiceTest {    @MockBean    private ClienteLinhaRepository repository;    private ClienteLinhaService service;    private ClienteLinha clienteLinha;    private Cliente cliente;    private ClienteLinha getClienteLinha() {        ClienteLinha clienteLinha = new ClienteLinha();        clienteLinha.setId(1L);        clienteLinha.setCliente(getCliente());        clienteLinha.setTipoTransporte(TipoTransporteEnum.LOTACAO);        return clienteLinha;    }    private Cliente getCliente() {        Cliente cliente = new Cliente();        cliente.setId(1L);        cliente.setDocumento("49765258216");        cliente.setEmail("email@email.com.br");        cliente.setNome("Teste cliente");        cliente.setTelefone(767678689L);        return cliente;    }    private List<LinhaOnibus> listLinhaOnibus() {        LinhaOnibus linhaOnibus = new LinhaOnibus();        List<LinhaOnibus> list = new ArrayList<>();        linhaOnibus.setId(1L);        linhaOnibus.setNome("Linha Avenida");        linhaOnibus.setCodigo("367-2");        list.add(linhaOnibus);        return list;    }    private List<LinhaLotacao> listLinhaLotacao() {        LinhaLotacao linhaLotacao = new LinhaLotacao();        List<LinhaLotacao> list = new ArrayList<>();        linhaLotacao.setId(1L);        linhaLotacao.setNome("Lotação parque");        linhaLotacao.setCodigo("987A-1");        list.add(linhaLotacao);        return list;    }    private ClienteLinhaDTO mockClienteLinhaDto() {        ClienteLinhaDTO linha = mock(ClienteLinhaDTO.class);        when(linha.getCliente()).thenReturn(getCliente());        when(linha.getLinhasOnibus()).thenReturn(listLinhaOnibus());        when(linha.getLinhasLotacoes()).thenReturn(listLinhaLotacao());        return linha;    }    @Before    public void setUp() {        service = new ClienteLinhaService(repository);        clienteLinha = getClienteLinha();        cliente = getCliente();    }    @Test    public void clienteLinhaFindLinhasByCliente() {        service.findLinhasByCliente(cliente.getId());        verify(repository).findLinhasByCliente(cliente.getId());    }    @Test    public void clienteLinhaRemoveClienteLinhaByCliente() {        List<ClienteLinha> list = new ArrayList<>();        service.removeClienteLinhaByCliente(cliente.getId());        verify(repository).deleteInBatch(list);    }}